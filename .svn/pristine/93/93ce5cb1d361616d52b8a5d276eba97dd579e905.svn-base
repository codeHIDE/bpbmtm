<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- component-scan自动搜索@Component , @Controller , @Service , @Repository等标注的类 -->
	<!-- 默认值如果适合，该项可以不用修改 -->	
	<context:annotation-config/>
	<context:component-scan base-package="com.bypay.action"/>
	<context:component-scan base-package="com.bypay.dao"/>
	<context:component-scan base-package="com.bypay.service"/>
	<context:component-scan base-package="com.bypay.util"/>

	
	<!-- 属性文件读入,使用rapid中的JdbcPlaceholderConfigurer则可以从数据库读取配置信息 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:com/bypay/config/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- 数据源定义,使用Apache DBCP 连接池
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean> -->
	<!-- C3P0连接池配置 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >  
		<property name="driverClass"><value>${jdbc.driver}</value></property>  
		<property name="jdbcUrl"><value>${jdbc.url}</value></property>  
		<property name="user"><value>${jdbc.user}</value></property>  
		<property name="password"><value>${jdbc.password}</value></property>  
		<property name="initialPoolSize"><value>${jdbc.initialPoolSize}</value></property>  
		<property name="minPoolSize"><value>${jdbc.minPoolSize}</value></property>  
		<property name="maxPoolSize"><value>${jdbc.maxPoolSize}</value></property>  
		<property name="maxIdleTime" value="25000"/>
	</bean>   -->
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${initialSize}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxActive" value="${maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<!-- <property name="validationQuery" value="SELECT 'x'" /> -->
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
			<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j,config" />
		
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${maxPoolPreparedStatementPerConnectionSize}" />
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

</beans>